##ACE-STGPAR 4 0009 
@if VERSION >= 6
@os Atari
@charset atarist
@inputenc atarist
@lang de
@endif
@database "AppLine - Was lÑuft hier?"
@author "Holger Weets/Rainer Wiesenfeller"
@$VER: APPLINE.HYP (24/3/1997)
@subject "Dokumentation/Utilities"
@options "+i -s +z -t4 -d12"
@width 75


@node "Main" "AppLine"
@symbol r "AppLine"
@{B}@{"AppLine V2.5                                                        AppLine" ignore} @{b}
@line 1 75 0 0 7

@limage "appline.img" 1



 Was macht AppLine?
 Installation
 Systemvoraussetzung
 EinschrÑnkungen und Hinweise
 Benutzung

 Fairware

 History
@endnode


@node "Was macht AppLine?"
@{B}@{"Was macht AppLine?                                                  AppLine" ignore} @{b}
@line 1 75 0 0 7

AppLine installiert eine Leiste am unteren Bildschirmrand, in der alle
laufenden (GEM-)Programme aufgefÅhrt werden.

Automatisch ausgeblendet wird nur der Screenmananger; weitere nicht in der
Leiste darzustellende Applikationen kînnen in der Datei <appline.inf>
angegeben werden.
@endnode


@node "Installation"
@{B}@{"Installation                                                        AppLine" ignore} @{b}
@line 1 75 0 0 7

AppLine gehîrt in den APP Ordner von MagiC und lÑuft nur unter diesem
Betriebssystem.

Zur Steuerung des Verhaltens von AppLine kann eine Datei Namens
"appline.inf" angelegt werden, sie bietet folgende Mîglichkeiten:

* @{B}<name>@{b}
  so notierte Applikationen werden in der Leiste nicht angezeigt;
  Beispiel: WBDAEMON

@symbol ai "!<name>"
* @{B}!<name>@{b}
  durch mit einem Ausrufezeichen markierte Namen werden Applikationen
  gekennzeichnet, die beim @{"nach vorne" LINK "Benutzung" "nach vorne"} holen durch AppLine abstÅrzen,
  wenn sie zu diesem Zeitpunkt keine Fenster geîffnet haben; AppLine
  unterlÑût dann die Provokation dieses Fehlers in solchen Applikationen
  Beispiel: !CAT

@symbol ai "-<name>"
* @{B}-<name>@{b}
  Teilt AppLine mit, daû die Applikation <name> keine eigene Menueleiste
  besitzt; AppLine verwendet dann ein leicht modifiziertes Verfahren, diese
  Applikation nach vorne zu bringen.
  Beispiel: -ST-GUIDE

@symbol ai "=<name>"
* @{B}=<name>@{b}
  Legt die Farbe fest, in der der Name dieser Applikation im Button
  erscheinen soll, erlaubt sind Werte zwischen 0 und 15.
  Die Defaultfarbe wird per '=*' festgelegt, wird sie nicht angegeben, so
  erscheinen entsprechende Texte schwarz.
  Beispiel: =THING 11       # Desktop grÅn darstellen

Zu beachten ist obigen Angaben unbedingt, daû die Dateinamen exakt so
geschrieben werden mÅssen, wie sie auch in der Leiste erscheinen, also
aktuell in Groûbuchstaben, maximal 8 Zeichen lang und ohne ihre Endung.

Auûerdem stehen folgende Schalter zur VerfÅgung, um eine mîglichst freie
Konfigurierbarkeit zu erreichen:

/topwind            - AppLinefenster vorne lassen
/backwind           - AppLinefenster immer hinten halten
/nocloser           - AppLine Button nicht zeigen
/default            - Aktion bei Klick auf den AppLine Button festlegen
/showmem            - freien Speicher anzeigen
/large              - Speicher mit groûem Font anzeigen
/topline            - Leiste am oberen Bildschirmrand zeigen
/select             - Button der aktiven App selektieren
/timer              - Zeit zwischen zwei Aktualisierungen festlegen
/resize             - Leiste immer passend breit zeigen
/rstart             - Leiste "wÑchst" von rechts nach links
/vertical           - Buttons untereinander darstellen
/deskfirst          - Desktop als ersten Button zeigen
/fkeys              - Buttons per F-Taste ansprechbar
/xoff               - Abstand der Leiste zum linken Bildschirmrand
/yoff               - Abstand der Leiste zum unteren/oberen Bildschirmrand
/space              - Rand zwischen zwei "Gruppen"
/nowind             - Buttons von Apps ohne offene Fenster markieren
/frozen-disabled    - Buttondarstellung verÑndern
/border             - StÑrke des 3D-Effektes festlegen
/firstapp           - App angeben, die immer im ersten Button gezeigt wird
@endnode


@node "/topwind"
@xref "/backwind"
@{B}@{"/topwind                                                            AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit wird erreicht, daû AppLine die Leiste beim ôffnen nicht sofort
  @{"nach hinten" LINK "Benutzung" "nach hinten"} legt.
@endnode


@node "/nocloser"
@xref "/default"
@{B}@{"/nocloser                                                           AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit kann das Symbol am linken Rand der Leiste ausgeblendet werden,
  falls es nicht benîtigt wird.
@endnode


@node "/showmem"
@xref "/large"
@{B}@{"/showmem                                                            AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit wird die Anzeige des freien Speichers am rechten Rand der Leiste
  eingeschaltet. Sie wird ggfls. durch die Buttons einfach Åberschrieben,
  kostet so gesehen also keinen Platz.
@endnode


@node "/topline"
@{B}@{"/topline                                                            AppLine" ignore} @{b}
@line 1 75 0 0 7

  öberredet AppLine, sich direkt unter der Menueleiste zu zeigen, statt wie
  normalerweise am unteren Bildschirmrand.
@endnode


@node "/select"
@{B}@{"/select                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

  Schaltet das Selektieren derjenigen Applikation, der das oberste Fenster
  gehîrt, ein. Wenn das Fenster von AppLine vorne liegt, dann wird selbst-
  verstÑndlich der "Aktionsbutton" (das Symbol am linken Rand der Leiste)
  selektiert.
  Gibt es kein aktives Fenster, dann wird die App selektiert, deren
  Menuezeile aktiv ist.
@endnode


@node "/timer"
@{B}@{"/timer                                                              AppLine" ignore} @{b}
@line 1 75 0 0 7

  Legt das Intervall fest, in dem die Leiste aktualisiert werden soll.
  Fehlt diese Zeile, so erfolgt die Aktualisierung alle 2 Sekunden.
@endnode


@node "/resize"
@{B}@{"/resize                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

  Legt fest, daû AppLine die Leiste immer nur so breit darstellt, wie auch
  Buttons vorhanden sind, also nicht die volle Bildschirmbreite belegt,
  wenn es nicht sein muû.
@endnode


@node "/rstart"
@xref "/resize"
@{B}@{"/rstart                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

  Zeigt nur Wirkung, wenn /resize eingeschaltet ist und bewirkt, daû die
  Leiste von rechts nach links "wÑchst".
@endnode


@node "/vertical"
@{B}@{"/vertical                                                           AppLine" ignore} @{b}
@line 1 75 0 0 7

  Bewirkt, daû die Buttons untereinander dargestellt werden und die Leiste
  von oben nach unten "wÑchst"; ist /vertical gesetzt, so bleiben folgende
  Optionen ohne Wirkung:
  /resize (ist dann immer aktiv),
  /rstart (macht keinen Sinn),
  /topline (ist prinzipbedingt aktiv),
  /showmem (funktioniert mit dem verwendeten Konzept einfach nicht),
  /large (kein /showmem, kein /large)
  DefaultmÑûig erscheint die Leiste dann in der linken oberen Ecke des
  Bildschirmes, dies kann jedoch mithilfe von /xoff und /yoff variiert
  werden.
@endnode


@node "/backwind"
@xref "/topwind"
@{B}@{"/backwind                                                           AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit ist es mîglich, das Fenster von AppLine stets hintenliegend zu
  halten, d.h. es wird niemals das oberste Fenster sein (es sei denn, es
  ist das einzige offene Fenster).
  Nachteile: AppLine nimmt dann nicht mehr am WindowCycling teil, und die
  öbergabe von Dateien durch Ziehen derselben auf die Buttons von AppLine
  ist dann nicht mehr mîglich.
@endnode


@node "/default"
@xref "/nocloser"
@{B}@{"/default                                                            AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit wird festgelegt, welche Aktion beim Anklicken des AppLine
  Buttons ausgefÅhrt werden soll.
  Erlaubt sind 'close', 'top' oder 'bottom', ist etwas anderes oder gar
  nichts angegeben, so erscheint das Popup.
@endnode


@node "/deskfirst"
@xref "/firstapp"
@{B}@{"/deskfirst                                                          AppLine" ignore} @{b}
@line 1 75 0 0 7

  Bewirkt, daû der Desktop immer als erster Button in der Leiste
  erscheint, anstatt nach den ACCs. Ein Ausblendversuch des Desktops wird
  ignoriert, wenn dieser Schalter gesetzt ist.
  /deskfirst wird ignoriert, wenn /firstapp gesetzt ist.
@endnode


@node "/fkeys"
@{B}@{"/fkeys                                                              AppLine" ignore} @{b}
@line 1 75 0 0 7

  Schaltet die Mîlichkeit ein, bei vorneliegendem AppLine Fenster die
  Buttons der Reihe nach per Funktionstaste auswÑhlen zu kînnen; der
  AppLine Button wird dabei nicht mitgezÑhlt, d.h. der erste Button
  mit dem Namen einer Applikation wird mit F1 gewÑhlt, der nÑchste mit
  F2 etc.
  Nachteil: dann werden die F-Tasten natÅrlich nicht mehr an den AV Server
  durchgereicht.
@endnode


@node "/large"
@xref "/showmem"
@{B}@{"/large                                                              AppLine" ignore} @{b}
@line 1 75 0 0 7

  Schaltet den zur Anzeige des freien Speichers verwendeten Font auf den
  groûen Systemzeichensatz um (defaultmÑûig wird der kleine verwendet)
@endnode


@node "/xoff"
@xref "/yoff"
@{B}@{"/xoff                                                               AppLine" ignore} @{b}
@line 1 75 0 0 7

  Definiert den Abstand der Leiste zum linken Bildschirmrand; Sinn dieser
  Option ist es, iconifizierte Fenster entlang des linken Bildschirmrandes
  platzieren zu kînnen, ohne das AppLine dadurch verdeckt wird.
  Beispiel: /xoff 72
@endnode


@node "/yoff"
@xref "/xoff"
@xref "/topline"
@{B}@{"/yoff                                                               AppLine" ignore} @{b}
@line 1 75 0 0 7

  Definiert den Abstand der Leiste zum unteren Bildschirmrand bzw den
  Abstand zur Menueleiste, falls /topline verwendet wird;
  Beispiel: /yoff 4
@endnode


@node "/space"
@{B}@{"/space                                                              AppLine" ignore} @{b}
@line 1 75 0 0 7

  FÅgt nach dem angegebenen Button einen schmalen Rand ein; der AppLine
  Button wird dabei nicht mitgezÑhlt.
  Beispiel: /space 3
@endnode


@node "/nowind"
@xref "/frozen-disabled"
@{B}@{"/nowind                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

  Markiert alle Applikationen, die gerade keine Fenster geîffnet haben
  dadurch, daû die Buttons hell dargestellt erscheinen. Diese Darstellung
  kann mittels /frozen-disabled beeinfluût werden.

@endnode


@node "/frozen-disabled"
@{B}@{"/frozen-disabled                                                    AppLine" ignore} @{b}
@line 1 75 0 0 7

  Markiert alle Applikationen, die gerade keine Fenster geîffnet haben
  dadurch, daû die Buttons "durchgesstrichen" werden, und eingefrorene
  Apps durch helle Schrift, schaltet das Default Verhalten also um.
@endnode


@node "/border"
@{B}@{"/border                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

  Hiermit wird die "StÑrke des 3D-Effektes eingestellt; je grîûer der
  angegebene Wert, desto stÑrker sind die Rahmen der Appîikationen.

@endnode


@node "/firstapp"
@xref "/deskfirst"
@{B}@{"/firstapp                                                           AppLine" ignore} @{b}
@line 1 75 0 0 7

  Falls die als Parameter angegebene App lÑuft, wird sie immer im ersten
  Button von Appline angezeigt und /deskfirst wird ignoriert.

@endnode


@node "Systemvoraussetzung"
@{B}@{"Systemvoraussetzung                                                 AppLine" ignore} @{b}
@line 1 75 0 0 7

AppLine lÑuft in jeder Auflîsung auf allen Rechnern, auf denen ein MagiC
>= V3.00 oder MagiCMac installiert ist.
@endnode


@node "EinschrÑnkungen und Hinweise"
@{B}@{"EinschrÑnkungen und Hinweise                                        AppLine" ignore} @{b}
@line 1 75 0 0 7

Solange genug Platz in der Leiste ist, werden alle Buttons in gleicher
Grîûe dargestellt, wird es eng, so werden die Buttons auf minimale
Breite reduziert; reicht der Platz dann immer noch nicht, so ist das
persînliches Pech ;-)
Eigene Tests ergaben, daû sich selbst auf meinem [alten] Monitor (704
Pixel horizontal) locker 16 Buttons darstellen lassen...den meisten
Anwendern dÅrfte daher der Speicher ausgehen, bevor es in der Leiste
zu eng wird ;-)

Wem der verwendete kleine Font in der Leiste zu mickrig ist, der kann mit
einem RSC-Editor die in appline.rsc vorliegenden Buttons auf den groûen
Systemfont Ñndern oder applineb.rsc in appline.rsc umbenennen.
Frei definierbare Fonts werde ich nicht implementieren.
@endnode


@node "Benutzung"
@{B}@{"Benutzung                                                           AppLine" ignore} @{b}
@line 1 75 0 0 7

Ein Klick auf einen der Buttons bringt alle(!) Fenster der betreffenden
Applikation in der richtigen Reihenfolge nach vorne; hat die Applikation
keine offenen Fenster, so bekommt sie eine VA_START Nachricht mit einem
Nullpointer als Parameter, was die meisten Progs dazu bewegt, aktiv zu
werden.

@box 1 70 10 0

  Nun gibt es offenbar Programme, die damit nicht zurechtkommen:
      - QED: im nÑchsten Update behoben
      - COMA: ab V3.20 behoben
      VT52, Kandinsky, TakeOff, Esscode, Zoom, Hex-Edit, Interface
      haben ebenfalls Probleme.
  Also bitte bei 2 Bomben als Reaktion auf ein versuchtes nach vorne
  holen einer Applikation nicht mich anschreiben, sondern den Autor
  des betreffenden Programmes.


@{U}Klick mit CTRL, Rechtsklick oder Doppelklick îffnet ein Popup mit
folgenden Funktionen:@{u}

@limage "popup.img" 1

@symbol ai "nach vorne"
    nach vorne      bringt alle Fenster der App nach vorne
                    (wie Einfachklick)

@symbol ai "nach hinten"
    nach hinten     verlegt alle Fenster der betreffenden App nach hinten

@symbol ai "ausblenden"
    ausblenden      lÑût alle Fenster der betreffenden Applikation vom
                    Bildschirm verschwinden; dies geschieht MagiC
                    kompatibel, d.h. diese und die entsprechende Funktion
                    aus dem MagiC-Menue kînnen gemischt verwendet werden.

                    Achtung: dieses MagiC Feature existiert noch nicht
                    immer, unter MagiC 4 funktioniert es, aber es gibt
                    MagiC 3 Versionen, in denen dieses Feature noch nicht
                    enthalten ist (ob es welche gibt, in denen 'ausblenden'
                    per Nachricht funktioniert, weiû ich derzeit nicht).

@symbol ai "andere ausblenden"
    a. ausblenden   lÑût alle Fenster auûer denen der gewÑhlten Applikation
                    (und dem von AppLine) vom Bildschirm verschwinden;

                    Genau wie 'ausblenden' muû diese Funktion nicht
                    zwangslÑufig funktionieren, denn manche Programme
                    lassen sich einfach nicht ausblenden, mehr als es ver-
                    suchen kann AppLine nicht tun ;-)
                    Hat die gewÑhlte Applikation keine offenen Fenster, so
                    zeigen beide Ausblend-Funktionen keinerlei Wirkung.

                    FÅr die VerfÅgbarkeit dieser Funktion gilt das unter
                    'ausblenden' gesagte.

@symbol ai "auftauen"
@symbol ai "einfrieren"
    einfrieren
    auftauen        friert den Prozeû ein bzw. taut ihn auf; im einge-
                    frorenen Zustand ist eine Applikation quasi nicht
                    existent, sie ist fÅr andere Prozesse nicht auffind-
                    bar, ihre Fenster werden versteckt und sie bekommt
                    keine Rechenzeit.
                    AppLine stellt die Buttons solcher Prozesse durch-
                    gestrichen dar (per /frozen-disabled einstellbar)

@symbol ai "beenden"
    beenden         schickt der App eine AP_TERM Nachricht, so daû sie
                    terminiert, sofern es sich um eine saubere App handelt

@symbol ai "rauswerfen"
    rauswerfen      die App wird "unsanft" aus dem System entfernt; nach
                    Mîglichkeit sollte diese Funktion nicht verwendet
                    werden, weil a) die App normalerweise ihre Daten
                    nicht mehr sichern kann, und b) diese Aktion zu einem
                    Totalabsturz fÅhren kann, falls die entfernte App
                    unsauber programmiert ist
                    ALSO VORSICHT!

Werden Dateien auf einen der Buttons gezogen, so werden diese an die be-
treffende Applikation weitergereicht

AppLine wird beendet, indem auf das Symbol am linken Rand der Leiste
geklickt und im erscheinenden Popup 'Quit' ausgewÑhlt wird.
@endnode


@node "Fairware"
@{B}@{"Fairware                                                            AppLine" ignore} @{b}
@line 1 75 0 0 7

AppLine ist Fairware, d.h. jeder darf dieses Programm installieren und
benutzen. Bei regelmÑûiger @{Benutzung ignore} wÑre aber eine kleine Spende an den
Author eine faire Geste, ohne die er die Weiterentwicklung von AppLine
sicher bald einstellen wird.

Meine Adresse:
    Holger Weets @@ OL
        oder
    Holger_Weets@@OL.maus.de

Wer eine aktuelle Version auf Diskette von mir haben mîchte, der Åberweise
bzw. schicke bitte 10,- DM (als AufwandsentschÑdigung) und schicke mir
eine Disk und einen frankierten und adressierten RÅckumschlag an
folgende Adresse:

    Holger Weets
    Tangastr. 45
    26121 Oldenburg

    Konto: 023-182 041
    BLZ  : 280 501 00
@endnode


@node "History"
@{B}@{"History                                                             AppLine" ignore} @{b}
@line 1 75 0 0 7

@{B}V2.4 -> V2.5@{b}
˙ Aufgrund der Vielzahl der Anfragen ist Anzeige der Namen in den Buttons
  wieder wie "frÅher", d.h. es werden wieder die Dateinamen und nicht die
  'Prozessnamen' angezeigt


@{B}V2.3 -> V2.4@{b}
˙ /firstapp funktionierte manchmal nicht - behoben
˙ (Doppel-)Klick auf die Freispeicher-Anzeige wirkt jetzt wie ein solcher
  auf den Closer, so das letzterer bei Bedarf abgeschaltet werden kann
˙ je nach Konfig. auftretende optische Unschînheit bei abgeschaltetem
  Closer behoben


@{B}V2.2 -> V2.3@{b}
˙ jetzt sollten auch solche Apps korrekt dargestellt werden, die sich im
  laufenden Betrieb "umbenennen"
˙ die .inf Datei wird jetzt in allen Pfaden aus PATH gesucht, statt nur im
  Startverzeichnis von AppLine
˙ ist die Env.-Variable AVSERVER gesetzt, so wartet AppLine so lange mit
  dem ôffnen des Fensters, bis der Server gestartet ist
˙ neues Kommando '/firstapp <name>' setzt den Button fÅr die App <name>
  ganz @{"nach vorne" LINK "Benutzung" "nach vorne"}, sofern sie lÑuft (/deskfirst wird ignoriert)


@{B}V2.1 -> V2.2@{b}
˙ die restlichen relevanten Strings ins RSC-File verlegt, damit das An-
  fertigen der englischen Version einfacher ist
˙ Protokoll fÅr SMU erweitert
˙ optische Unschînheit bei /rstart & /resize behoben
˙ /border wird bei weniger als 16 Farben ignoriert
˙ mehrfach laufende Applikationen werden jetzt besser unterstÅtzt


@{B}V2.0 -> V2.1@{b}
˙ es liegt ein neues RSC-File 'applineb.rsc' bei, mit Buttons in groûer
  Schrift; bei Bedarf einfach in 'appline.rsc' umbenennen
˙ Angabe von /rstart und /vertical bewirkt, daû die Leiste von unten nach
  oben "wÑchst"
˙ neues Kommando /border legt die "StÑrke" des 3D-Effektes fest
˙ der "Closer" zeigt jetzt ein eigenes Popup mit den Funktionen
  'Alle/Auswahl zeigen', 'Alle einblenden', 'Quit'
˙ Die Popups der Applikationen zeigen jetzt den Speicherbedarf des
  jeweiligen Kandidaten an


@{B}V1.9 -> V2.0@{b}
˙ bei eingeschaltetem /deskfirst erscheinen jetzt keine Ziffern mehr im
  ersten Button, wenn der Desktop noch gar nicht lÑuft, weil AppLine aus
  dem Apps-Ordner gestartet wurde.
˙ Aktionen bei /resize minimiert, vielleicht lindert das die Probleme
  einiger Anwender beim Fensterscrolling
˙ neue Option /rstart lÑût die Leiste bei /resize von rechts nach links
  "wachsen"
˙ neue Option /vertical lÑût die Buttons untereinander im Fenster
  erscheinen, die Leiste "wÑchst" dann von oben nach unten
˙ auf vielfachen Wunsch eines einzelnen Herren lassen sich die zur
  Visualisierung von "eingefroren" und "hat keine geîffneten Fenster"
  verwendeten Attribute jetzt einstellen: /frozen-disabled zeigt
  eingefrorene Apps mit heller Schrift und (falls eingeschaltet) Apps
  ohne Fenster ge-X-t


@{B}V1.8 -> V1.9@{b}
˙ neues Kommando /nowind stellt die Buttons aller Apps hell dar, die gerade
  kein Fenster geîffnet haben; die Buttons eingefrorener Prozesse werden
  jetzt durchgestrichen
˙ /resize funktioniert jetzt auch, wenn gar keine Apps in der Leiste
  stehen


@{B}V1.7 -> V1.8@{b}
˙ bei /yoff kînnen jetzt auch negative Werte angegeben werden, z.B. -2, um
  das "alte" Design (flachere Leiste) wieder herzubekommen
˙ beim @{"nach vorne" LINK "Benutzung" "nach vorne"} holen bekommt das anschlieûend oberste Fenster eine ent-
  sprechende Nachricht, so das der Cursor in den Editfenstern von Cat jetzt
  wieder erscheint
˙ neues Kommando /space fÅgt einen "Absatz" nach dem angegebenen Button ein


@{B}V1.6 -> V1.7@{b}
˙ die Popups erscheinen jetzt auch bei angegebenem /xoff wieder bÅndig mit
  dem Button
˙ bei angegebenem /xoff sowie /showmem und fehlendem /resize war die
  Speicheranzeige nicht mehr sichtbar - behoben
˙ bei eingeschaltetem /deskfirst wird der Ausblendversuch des Desktop
  ignoriert


@{B}V1.5 -> V1.6@{b}
˙ Der AV-Server wird jetzt Åber die Environment-Variable gesucht; sorry
  fÅr dieses öberbleibsel der ersten AppLine-Skizze :-}
˙ der freie Speicher wird jetzt mit einem Leerzeichen rechtem Rand
  angezeigt
˙ bei der Kombination von /resize und /showmem wird jetzt rechts
  entsprechend Platz hinter den Buttons gelassen
˙ bei eingeschalteter Freispeicheranzeige wird jetzt entsprechend frÅher
  auf den Platzspar-Modus umgeschaltet
˙ der untere Rand der Buttons liegt jetzt nicht mehr auûerhalb des Bild-
  schirmes
˙ per /fkeys kann (auf vielfachen Wunsch eines einzelnen Herren ;-) jetzt
  eingeschaltet werden, daû bei vorneliegendem AppLine Fenster die Buttons
  der Reihe nach mit den F-Tasten ausgewÑhlt werden kînnen
˙ TastendrÅcke gehen jetzt immer an den AV Server und nicht mehr mal an
  diese und mal an jene App (diejenige, deren Menue gerade dargestellt
  wird) ...zumal kaum ein Prog AV_SENDKEY auswertet.
˙ per /large kann die Anzeige des freien Speichers jetzt auf den groûen
  Systemfont umgeschaltet werden
˙ Kommandos /xoff und /yoff zur Bestimmung des Abstandes der Leiste von
  den RÑndern des Desktops eingebaut
@endnode
